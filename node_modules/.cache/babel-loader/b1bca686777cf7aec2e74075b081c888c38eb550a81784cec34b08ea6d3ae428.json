{"ast":null,"code":"var _jsxFileName = \"/home/lucas/front-price-market/src/components/login/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport AppMain from '..';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport RoutesNav from '../../data/Routes';\nimport { Container, Form, Input, Button } from './LoginStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    console.log(\"Formul치rio enviado:\", {\n      email: email,\n      password: password\n    });\n    e.preventDefault();\n    try {\n      const response = await axios.post('https://projetoinicialusr.onrender.com/v1/auth/login', {\n        email: email,\n        password: password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response) {\n        alert('Login bem-sucedido!');\n        /*#__PURE__*/_jsxDEV(AppMain, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this);\n      } else {\n        alert('Email ou senha inv치lida');\n      }\n    } catch (error) {\n      console.error('Erro ao fazer login:', error.response ? error.response.data : error.message);\n      alert('Erro ao fazer login: ' + (error.response ? error.response.data : error.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Senha:\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", true);\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","AppMain","BrowserRouter","Router","RoutesNav","Container","Form","Input","Button","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","useNavigate","handleSubmit","e","console","log","preventDefault","response","post","headers","alert","fileName","_jsxFileName","lineNumber","columnNumber","error","data","message","children","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/lucas/front-price-market/src/components/login/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport AppMain from '..';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport RoutesNav from '../../data/Routes';\nimport { Container, Form, Input, Button } from './LoginStyle';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    console.log(\"Formul치rio enviado:\", {email: email, password: password});\n    e.preventDefault();\n    try {\n      const response = await axios.post('https://projetoinicialusr.onrender.com/v1/auth/login', {email: email, password: password}, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response) {\n        alert('Login bem-sucedido!');\n        <AppMain></AppMain>\n      } else {\n        alert('Email ou senha inv치lida');\n      }\n    } catch (error) {\n      console.error('Erro ao fazer login:', error.response ? error.response.data : error.message);\n      alert('Erro ao fazer login: ' + (error.response ? error.response.data : error.message));\n    }\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n          <label>\n              Email:\n              <Input \n                  type=\"email\" \n                  value={email} \n                  onChange={(e) => setEmail(e.target.value)} \n                  required \n              />\n          </label>\n          <label>\n              Senha:\n              <Input \n                  type=\"password\" \n                  value={password} \n                  onChange={(e) => setPassword(e.target.value)} \n                  required \n              />\n          </label>\n          <Button type=\"submit\">Login</Button>\n      </Form>\n        </Container>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}