{"ast":null,"code":"var _jsxFileName = \"/home/lucas/front-price-market/src/components/login/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, Input, Button, ErrorMessage } from './LoginStyle';\nimport api from '../../axios/axios';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = async () => {\n  // Fazendo uma requisição GET/\n  /*\n  api.post('/v1/users')\n    .then(response => {\n      console.log(response.data);\n    })\n    .catch(error => {\n      console.error('Erro na requisição:', error);\n    });\n  */\n\n  try {\n    const response = await axios.post(\"https://projetoinicialusr.onrender.com/v1/users\");\n  } catch (error) {\n    const axiosError = error;\n    if (axiosError.response) {\n      console.log('O servidor respondeu com um status de erro ' + axiosError.response.data);\n      if (axiosError.response.status >= 401 && axiosError.response.status < 500) {}\n    } else if (axiosError.request) {\n      console.log('Erro ao fazer o POST: Sem resposta do servidor');\n    } else {\n      console.error('Ocorreu um erro antes da solicitação ser feita' + axiosError.message);\n    }\n  }\n  console.log(\"teste\");\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        placeholder: \"Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Container","Form","Input","Button","ErrorMessage","api","axios","jsxDEV","_jsxDEV","Login","response","post","error","axiosError","console","log","data","status","request","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["/home/lucas/front-price-market/src/components/login/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Form, Input, Button, ErrorMessage } from './LoginStyle';\nimport api from '../../axios/axios';\nimport axios from 'axios';\n\nconst Login = async () => {\n  // Fazendo uma requisição GET/\n  /*\n  api.post('/v1/users')\n    .then(response => {\n      console.log(response.data);\n    })\n    .catch(error => {\n      console.error('Erro na requisição:', error);\n    });\n  */\n\n  try {\n    const response = await axios.post(\"https://projetoinicialusr.onrender.com/v1/users\");\n  } catch(error) {\n    const axiosError = error;\n          if (axiosError.response) {\n              console.log('O servidor respondeu com um status de erro ' + axiosError.response.data);\n\n              if (axiosError.response.status >= 401 && axiosError.response.status < 500) {\n              }\n          } else if (axiosError.request) {\n              console.log('Erro ao fazer o POST: Sem resposta do servidor');\n          } else {\n              console.error('Ocorreu um erro antes da solicitação ser feita' + axiosError.message);\n          }\n  }\n  \n  console.log(\"teste\")\n    return (\n      <Container>\n        <Form>\n          <h2>Login</h2>\n          <Input\n            type=\"text\"\n            placeholder=\"Usuário\"\n          />\n          <Input\n            type=\"password\"\n            placeholder=\"Senha\"\n          />\n          <Button type=\"submit\">Entrar</Button>\n        </Form>\n      </Container>\n    );\n  };\n  \n  export default Login;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,YAAY,QAAQ,cAAc;AAC3E,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAG,MAAAA,CAAA,KAAY;EACxB;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,iDAAiD,CAAC;EACtF,CAAC,CAAC,OAAMC,KAAK,EAAE;IACb,MAAMC,UAAU,GAAGD,KAAK;IAClB,IAAIC,UAAU,CAACH,QAAQ,EAAE;MACrBI,OAAO,CAACC,GAAG,CAAC,6CAA6C,GAAGF,UAAU,CAACH,QAAQ,CAACM,IAAI,CAAC;MAErF,IAAIH,UAAU,CAACH,QAAQ,CAACO,MAAM,IAAI,GAAG,IAAIJ,UAAU,CAACH,QAAQ,CAACO,MAAM,GAAG,GAAG,EAAE,CAC3E;IACJ,CAAC,MAAM,IAAIJ,UAAU,CAACK,OAAO,EAAE;MAC3BJ,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;IACjE,CAAC,MAAM;MACHD,OAAO,CAACF,KAAK,CAAC,gDAAgD,GAAGC,UAAU,CAACM,OAAO,CAAC;IACxF;EACR;EAEAL,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EAClB,oBACEP,OAAA,CAACR,SAAS;IAAAoB,QAAA,eACRZ,OAAA,CAACP,IAAI;MAAAmB,QAAA,gBACHZ,OAAA;QAAAY,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdhB,OAAA,CAACN,KAAK;QACJuB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACFhB,OAAA,CAACN,KAAK;QACJuB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFhB,OAAA,CAACL,MAAM;QAACsB,IAAI,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACG,EAAA,GA7CElB,KAAK;AA+CT,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}